

NMD=load('./NMD.mat');

%---ISEED------------------------------------------------------------------
    iseed = ISEED;
%--------------------------------------------------------------------------

%---IKSLICE----------------------------------------------------------------
    ikslice = IKSLICE;
%--------------------------------------------------------------------------    

SED.SED(size(NMD.kpt(:,1:3,ikslice),1),1:(NMD.NUM_TSTEPS/2),1:NMD.NUM_MODES) = 0.0;
    
for ifft = 1:NMD.NUM_FFTS  
%VElOCITIES
    str_read=strcat(NMD.str.main,'/dump_',int2str(iseed),'_',int2str(ifft),'.vel');
    fid=fopen(str_read);
    dummy = textscan(fid,'%f%f%f','Delimiter',' ','commentStyle', '--'); 
    fclose(fid);
%Store velocity data of all atoms: subtract off the last time step
    velx = zeros(NMD.NUM_ATOMS,NMD.NUM_TSTEPS);
    vely = zeros(NMD.NUM_ATOMS,NMD.NUM_TSTEPS);
    velz = zeros(NMD.NUM_ATOMS,NMD.NUM_TSTEPS);
%--------------------------------------------------------------------------
tic  
%--------------------------------------------------------------------------
    for iatom = 1:NMD.NUM_ATOMS  
        velx(iatom,1:NMD.NUM_TSTEPS) =...
            dummy{1}(iatom:NMD.NUM_ATOMS:(length(dummy{1}(:))-NMD.NUM_ATOMS));
        vely(iatom,1:NMD.NUM_TSTEPS) =...
            dummy{2}(iatom:NMD.NUM_ATOMS:(length(dummy{1}(:))-NMD.NUM_ATOMS));
        velz(iatom,1:NMD.NUM_TSTEPS) =...
            dummy{3}(iatom:NMD.NUM_ATOMS:(length(dummy{1}(:))-NMD.NUM_ATOMS));
    end
%--------------------------------------------------------------------------
toc
%--------------------------------------------------------------------------
%Remove dummy
    clear dummy  
%Set mass array
    m = repmat(NMD.x0(:,2),1,NMD.NUM_TSTEPS);                     
%EIGENVECTORS
    str_read=strcat(NMD.str.main,'/eigvec.dat');
    eigenvec = dlmread(str_read);
%FREQUENCIES
    str_read=strcat(NMD.str.main,'/freq.dat');
    freq = dlmread(str_read);              
%Zero main SED FP: this gets averaged as you loop over the NUM_FFTS      
    Q = zeros(1,NMD.NUM_TSTEPS);
    QDOT = zeros(1,NMD.NUM_TSTEPS);
    


%--------------------------------------------------------------------------
tic  
%--------------------------------------------------------------------------
    for ikpt = 1:size(NMD.kpt(:,1:3,ikslice),1)
        for imode = 1:NMD.NUM_MODES
            spatial = 1i*( NMD.x0(:,3)*(2*pi./NMD.L(1)).*(NMD.kptmaster(ikpt,1)) ...
                + NMD.x0(:,4)*(2*pi./NMD.L(2)).*(NMD.kptmaster(ikpt,2)) +...
                NMD.x0(:,5)*(2*pi./NMD.L(3)).*(NMD.kptmaster(ikpt,3)) );
            SPATIAL = repmat(spatial,1,NMD.NUM_TSTEPS);
            
    %WARNING:           :3:, where PRIM has :1: (: implicit) for CONV, must use 
    
    kindex = NMD.kpt_index(ikpt,ikslice);
       
            eigx = repmat(...
                conj(...
                eigenvec(...
                ((NMD.NUM_ATOMS_UCELL*3)*(kindex-1)+1)... 
                :3:...
                ((NMD.NUM_ATOMS_UCELL*3)*kindex),imode)),...
                NMD.NUM_UCELL_COPIES,NMD.NUM_TSTEPS);
            eigy = repmat(...
                conj(...
                eigenvec(...
                ((NMD.NUM_ATOMS_UCELL*3)*(kindex-1)+2)... 
                :3:...
                ((NMD.NUM_ATOMS_UCELL*3)*kindex),imode)),...
                NMD.NUM_UCELL_COPIES,NMD.NUM_TSTEPS);
            eigz = repmat(...
                conj(...
                eigenvec(...
                ((NMD.NUM_ATOMS_UCELL*3)*(kindex-1)+3)... 
                :3:...
                ((NMD.NUM_ATOMS_UCELL*3)*kindex),imode)),...
                NMD.NUM_UCELL_COPIES,NMD.NUM_TSTEPS);
            
            QDOT = sum(...
                (sqrt(m/NMD.NUM_UCELL_COPIES)).*...
                ( velx(:,1:NMD.NUM_TSTEPS).*eigx ...
                + vely(:,1:NMD.NUM_TSTEPS).*eigy ...
                + velz(:,1:NMD.NUM_TSTEPS).*eigz ).*(exp(SPATIAL)) , 1 );

            KEXCORR = xcorr(QDOT,'coeff');

            KEFFT = real(...
                fft(...
                KEXCORR(NMD.NUM_TSTEPS:NMD.NUM_TSTEPS*2-1))).^2 ... 
                + imag(...
                fft(...
                KEXCORR(NMD.NUM_TSTEPS:NMD.NUM_TSTEPS*2-1))).^2;
        SED.SED(ikpt,:,imode) = SED.SED(:,:,imode)+KEFFT(1:(NMD.NUM_TSTEPS/2)) ;
        end %END imode
    end %END ikpt
%--------------------------------------------------------------------------
toc 
%--------------------------------------------------------------------------
end %END ifft
    
%Average over FFTS
    SED.SED = SED.SED/NMD.NUM_FFTS;
%Define frequencies
    omega = (1:NMD.NUM_OMEGAS)*(NMD.w_max/NMD.NUM_OMEGAS);
    
%Output SED
    for ikpt = 1:size(NMD.kpt(:,1:3,ikslice),1)
        str_write_single=strcat(NMD.str.main,'/NMD/SED_',...
            num2str(NMD.kpt(ikpt,1,ikslice)),...
            num2str(NMD.kpt(ikpt,2,ikslice)),...
            num2str(NMD.kpt(ikpt,3,ikslice)),...
            '_',int2str(iseed),'.txt');
        output(1:length(omega),1) = omega;
        output(1:length(omega),2:(NMD.NUM_MODES+1)) = SED.SED(ikpt,:,:);
        dlmwrite(str_write_single,output,'delimiter',' ');
        clear output
    end %END ikpt    
%end %END iseed

