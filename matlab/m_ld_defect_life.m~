function ALLOY = m_ld_defect_life(NMD,SED,alloy_conc,m1,m2,vm)
%ALLOY = m_ld_defect_life(NMD,SED,alloy_conc,m1,m2,vm)
%--------------------------------------------------------------------------

%ALLOY.sedfreq=1;

%re-sort eigvec and transpose freq
for ikpt = 1:NMD.NUM_KPTS
        eig(...
            (ikpt-1)*NMD.NUM_MODES+1:(ikpt)*NMD.NUM_MODES,...
            1:3*NMD.NUM_ATOMS_UCELL)...
            =...
        NMD.eigvec( (NMD.NUM_ATOMS_UCELL*3)*(ikpt-1)+1 ...
            :...
            ((NMD.NUM_ATOMS_UCELL*3)*ikpt),   1:NMD.NUM_MODES      )';  
        
        ALLOY.freq(...
            (ikpt-1)*NMD.NUM_MODES+1:(ikpt)*NMD.NUM_MODES,1)...
            =...
            NMD.freq(ikpt,:)';

            
%         NMD.eigvec( (NMD.NUM_ATOMS_UCELL*3)*(ikpt-1)+1 ...
%             :...
%             ((NMD.NUM_ATOMS_UCELL*3)*ikpt),   1:NMD.NUM_MODES      )'
end

%DOS 
%[y x ]=hist(freq,17); loglog(x,y,'.',x,5*(x.^2))

%--------------------------------------------------------------------------
%pause
%--------------------------------------------------------------------------


for imode = 1:size(eig,1)
imode;
    g(1) =...
        (1-alloy_conc)* ((1 - (m1/vm) )^2) ... 
        +...
        (alloy_conc)* ((1 - (m2/vm) )^2);
%find all e*(k',v') dot e(k,v), sum over b
    SUMb =...
        g(1)*...
        abs(...
        sum(...
        bsxfun(...
        @times, eig(:,:)  ,  conj(eig(imode,:)) ),2) ...
        ).^2 ;
% %is (NUM_MODES,3*NUM_ATOMS_UCELL)
%     size(bsxfun(@times, eig(:,:)  ,  conj(eig(imode,:)) ));
% %is (NUM_MODES,1)
%     size(sum(...
%         bsxfun(...
%         @times, eig(:,:)  ,  conj(eig(imode,:)) ),2));
%--------------------------------------------------------------------------
%pause
%--------------------------------------------------------------------------  
    
%set self-term 0
    SUMb(imode) = 0;
%calculate average level spacing
freq_sorted = sort(ALLOY.freq);
ALLOY.dw_avg =...
    real(...
    mean(...
    freq_sorted(2:NMD.NUM_MODES)...
    -...
    freq_sorted(1:NMD.NUM_MODES-1)));

ALLOY.dw_avg 
% 
% size(freq_sorted)
% length(freq_sorted)
% freq_sorted(1:10)
% 
% pause

%find lorentzian broadenings
delwij = ...
    ALLOY.freq - ALLOY.freq(imode);
lor = (1.0/pi)*(ALLOY.dw_avg./( delwij.^2 + ALLOY.dw_avg^2 ) );
%evaluated Eq. ()
    ALLOY.life(imode) =...
        ( pi*(ALLOY.freq(imode)^2) ) / ( 2*NMD.Nx*NMD.Ny*NMD.Nz )*...
        sum(lor.*SUMb,1);
%convert linewidth to lifetime
ALLOY.life(imode) = 1/ALLOY.life(imode);
        
end

end
